<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Auto Scaling on AWS Container Labs</title>
    <link>/tags/auto-scaling.html</link>
    <description>Recent content in Auto Scaling on AWS Container Labs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    
	<atom:link href="/tags/auto-scaling/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A-应用水平弹性伸缩</title>
      <link>/1-management/104-scaling/1-hpa.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/1-management/104-scaling/1-hpa.html</guid>
      <description>介绍  EKS的弹性伸缩包括两个方面的内容:
 一个是水平的 Pod 弹性伸缩（HPA：Horizontal Pod Autoscaler），这是调用K8s的API实现replica配置 一个是集群的 Node 弹性伸缩（CA：Cluster Autoscaler），这是集群层面的垂直弹性伸缩  部署 Metrics Server  参考官网 https://github.com/kubernetes-sigs/metrics-server
 安装当前（截止到2021年6月）最新版 0.5.0  kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.5.0/components.yaml 检查安装情况  kubectl get apiservice v1beta1.metrics.k8s.io -o json | jq &#39;.status&#39; 类似输出如下：
{ &amp;quot;conditions&amp;quot;: [ { &amp;quot;lastTransitionTime&amp;quot;: &amp;quot;2021-06-25T15:15:28Z&amp;quot;, &amp;quot;message&amp;quot;: &amp;quot;all checks passed&amp;quot;, &amp;quot;reason&amp;quot;: &amp;quot;Passed&amp;quot;, &amp;quot;status&amp;quot;: &amp;quot;True&amp;quot;, &amp;quot;type&amp;quot;: &amp;quot;Available&amp;quot; } ] } Pod伸缩(HPA)   准备工作 确认 Metrics Server 部署成功，有数据才能实现 查看是否OK  kubectl top node 如果返回类似如下表示运行正常，可以考虑部署应用测试了</description>
    </item>
    
    <item>
      <title>B-集群弹性伸缩</title>
      <link>/1-management/104-scaling/2-cluster-autoscaler.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/1-management/104-scaling/2-cluster-autoscaler.html</guid>
      <description>我们将结合 kube-ops-view （通过Helm部署，官方地址 ）来实现弹性伸缩的可视化配置的数据源。
安装kube-ops-view   此处我们使用参数 --set service.type=LoadBalancer 表示把kube-ops-view的入口部署到ELB上（从而避免了必须使用kube-proxy做端口转发）  helm install kube-ops-view \ stable/kube-ops-view \ --set service.type=LoadBalancer \ --set rbac.create=True 查看安装情况  helm list 如果返回类似如下表示部署成功
NAME NAMESPACE REVISION UPDATED STATUS CHART APP VERSION kube-ops-view default 1 2021-06-25 14:24:03.611338556 +0000 UTC deployed kube-ops-view-1.2.4 20.4.0 查看入口  kubectl get svc kube-ops-view | tail -n 1 | awk &#39;{ print &amp;quot;Kube-ops-view URL = http://&amp;quot;$4 }&#39; 系统会返回类似的结果
Kube-ops-view URL = http://a368d8f0ea6ab422eabb8445818b09fd-265230446.us-east-1.elb.amazonaws.com 打开其中的 URL（因为此处我们使用了ELB，在创建ELB和传播DNS的时候需要点时间，一般需要1-2分钟左右），会获得一个如下图所示的监控数据页面</description>
    </item>
    
  </channel>
</rss>